name: CI

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches:
      - main

env:
  DATABASE_URL: file:./test.db
  NODE_VERSION: '24'
  HUSKY: 0 # Disable Husky in CI environment

jobs:
  lint-and-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node environment
        uses: ./.github/actions/setup-node-env
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run format check
        run: npm run format

      - name: Run lint check
        run: npm run lint

      - name: Run type check
        run: npm run check

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node environment
        uses: ./.github/actions/setup-node-env
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run unit tests
        run: npm run test:unit

      - name: Run E2E tests
        run: npm run test:e2e

  build:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node environment
        uses: ./.github/actions/setup-node-env
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: .svelte-kit/cloudflare/
          retention-days: 1

  preview-deploy:
    name: Deploy to Preview Environment
    needs: [lint-and-format, test, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    permissions:
      contents: read
      deployments: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node environment
        uses: ./.github/actions/setup-node-env
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build application
        run: npm run build

      - name: Deploy to Cloudflare Workers (Preview)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env preview --name aqua-note-pr-${{ github.event.number }}
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Add preview URL comment
        uses: actions/github-script@v7
        if: success()
        with:
          script: |
            const name = `aqua-note-pr-${context.issue.number}`;
            const preview_url = `https://${name}.${process.env.CF_ACCOUNT_SUBDOMAIN}.workers.dev`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ „Éó„É¨„Éì„É•„ÉºÁí∞Â¢É„Å´„Éá„Éó„É≠„Ç§„Åï„Çå„Åæ„Åó„Åü: ${preview_url}`
            })
        env:
          CF_ACCOUNT_SUBDOMAIN: ${{ secrets.CLOUDFLARE_ACCOUNT_SUBDOMAIN }}
